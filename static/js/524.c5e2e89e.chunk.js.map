{"version":3,"file":"static/js/524.c5e2e89e.chunk.js","mappings":"sSAqBMA,GAAQC,EAAAA,EAAAA,GAAY,CACtBC,QAAS,CACLC,OAAO,CACHC,KAAK,UACLC,aAAc,WAMX,SAASC,IACpB,MAAgCC,EAAAA,SAAe,MAA/C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoDF,EAAAA,SAAe,MAAnE,eAAOG,EAAP,KAA2BC,EAA3B,KAEMC,EAAaC,QAAQL,GACrBM,EAAmBD,QAAQH,GAE3BK,EAAwB,SAACC,GAC3BP,EAAYO,EAAMC,cACrB,EAMKC,EAAwB,WAC1BP,EAAsB,KACzB,EAWKQ,EAAS,8BACTC,GACF,SAAC,IAAD,CACIZ,SAAUA,EACVa,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,GAAIL,EACJM,aAAW,EACXC,gBAAiB,CACbJ,SAAU,MACVC,WAAY,SAEhBI,KAAMf,EACNgB,QAxBgB,WACpBnB,EAAY,MACZS,GACH,EAQG,UAeI,SAAC,IAAD,CAAUW,QAlCC,WACfC,aAAaC,WAAW,QAC3B,EAgCO,sBAIFC,EAAe,qCACfC,GACF,SAAC,IAAD,CACIzB,SAAUE,EACVW,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,GAAIQ,EACJP,aAAW,EACXC,gBAAiB,CACbJ,SAAU,MACVC,WAAY,SAEhBI,KAAMb,EACNc,QAASV,EAbb,UAeI,UAAC,IAAD,CAAUW,QAASd,EAAnB,WACI,SAAC,IAAD,CACImB,KAAK,QACL,aAAW,0BACX,gBAAc,8BACd,gBAAc,OACdC,MAAM,UALV,UAOI,SAAC,IAAD,OAEJ,wCAKZ,OACI,UAAC,IAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,WACI,SAAC,IAAD,CAAerC,MAAOA,EAAtB,UACI,SAAC,IAAD,CAAQsC,SAAS,SAASH,MAAM,SAAhC,UACI,UAAC,IAAD,YACI,SAAC,IAAD,CACID,KAAK,QACLK,KAAK,QACLJ,MAAM,UACN,aAAW,cACXC,GAAI,CAAEI,GAAI,MAId,SAAC,IAAD,CACIC,QAAQ,KACRC,QAAM,EACNC,UAAU,MACVP,GAAI,CAAEQ,QAAS,CAAEC,GAAI,OAAQC,GAAI,UAJrC,yBAQA,SAAC,IAAD,CAAKV,GAAI,CAAEC,SAAU,MACrB,SAAC,IAAD,CAAKD,GAAI,CAAEQ,QAAS,CAAEC,GAAI,OAAQE,GAAI,SAAtC,UACI,SAAC,IAAD,CACIb,KAAK,QACLK,KAAK,MACL,aAAW,0BACX,gBAAepB,EACf,gBAAc,OACdU,QAASd,EACToB,MAAM,UAPV,UASI,SAAC,IAAD,SAGR,SAAC,IAAD,CAAKC,GAAI,CAAEQ,QAAS,CAAEC,GAAI,OAAQE,GAAI,SAAtC,UACI,SAAC,IAAD,CACIb,KAAK,QACL,aAAW,YACX,gBAAeF,EACf,gBAAc,OACdH,QAnGC,SAACb,GAC1BL,EAAsBK,EAAMC,cAC/B,EAkG2BkB,MAAM,UANV,UAQI,SAAC,IAAD,eAMnBF,EACAb,IAGZ,C,gGCjKc,SAAS4B,EAAsBC,GAC1C,OACI,SAAC,KAAD,CAAUC,KAAMD,EAAMC,MAE7B,CANDC,EAAAA,GAAAA,SAAiBC,EAAAA,GAAYC,EAAAA,EAASC,EAAAA,G,6LCAhCC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACM,OADNA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACFC,MAAQ,CACJC,QAAS,CACL,CACIC,KAAM,OACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIC,WAAR,EACbC,UAAU,GAEd,CACIJ,KAAM,OACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIG,YAAR,EACbD,UAAU,GAEd,CACIJ,KAAM,SACNC,SAAU,SAAAC,GAAG,OAAIA,EAAII,aAAR,EACbF,UAAU,GAEd,CACIJ,KAAM,UACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIK,cAAR,EACbH,UAAU,GAEd,CACIJ,KAAM,SACNC,SAAU,SAAAC,GAAG,OAAIA,EAAIM,MAAR,EACbJ,UAAU,KAzBd,EA6CP,OA7CO,8BA6BR,WACI,IAAOK,EAAUC,KAAKnB,MAAfkB,OACP,OACI,UAAC,EAAAE,SAAD,YACI,oCACA,gBAAKC,UAAW,OAAhB,UACI,gBAAKA,UAAW,YAAhB,UACI,SAAC,KAAD,CACIb,QAASW,KAAKZ,MAAMC,QACpBP,KAAMqB,OAAOC,OAAOL,GACpBM,YAAU,UAMjC,OA9CClB,CAA4BmB,EAAAA,WAuDlC,OAAeC,EAAAA,EAAAA,UANf,YACI,MAAM,CACFR,OAF0B,EAARA,OAIzB,GAED,CAAwCZ,G,8BC7CxCJ,EAAAA,GAAAA,SACIyB,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACA1B,EAAAA,EACAC,EAAAA,IANJ,IASM0B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACM,OADNA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACFxB,MAAQ,CACJN,KAAK,CACD+B,OAAO,GACPC,SAAU,CACN,CACIC,MAAO,YACPjC,KAAM,GACNkC,gBAAiB,2BAErB,CACID,MAAO,YACPjC,KAAM,GACNkC,gBAAiB,8BAZzB,EA6EP,OA7EO,yCAiBR,WAAqB,IAAD,OACOhB,KAAKnB,MAArBoC,aACUC,aACbC,EAAAA,EAAAA,MACKC,MAAK,SAACC,GACHC,QAAQC,IAAIpB,OAAOC,OAAOiB,EAAOG,UAGjC,EAAKC,SAAS,CACV3C,KAAM,CACF+B,OAJO,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YACtF,UAAW,WAAY,YAInBC,SAAU,CACN,CACIC,MAAO,UACPjC,KAAMqB,OAAOC,OAAOiB,EAAOG,SAC3BR,gBAAiB,2BAErB,CACID,MAAO,OACPjC,KAAMqB,OAAOC,OAAOiB,EAAOK,MAC3BV,gBAAiB,wBAErB,CACID,MAAO,SACPjC,KAAMqB,OAAOC,OAAOiB,EAAOM,QAC3BX,gBAAiB,8BAKpC,GAEZ,uBAED,WAcI,OAbuBhB,KAAKnB,MAArBoC,aAaUC,YAET,gBAAKhB,UAAW,OAAhB,UACI,gBAAKA,UAAW,YAAhB,UACI,SAAC,KAAD,CAAK0B,QAhBL,CACZC,YAAY,EACZC,QAAS,CACLC,OAAQ,CACJ7D,SAAU,OAEd8D,MAAO,CACHxD,SAAS,EACTyD,KAAM,wBAQqBnD,KAAMkB,KAAKZ,MAAMN,YAMpD,SAAC,EAAAmB,SAAD,GAEP,OA9ECW,CAAmCN,EAAAA,WAsFzC,OAAeC,EAAAA,EAAAA,UALf,YACI,MAAO,CACHU,aAFgC,EAAdA,aAIzB,GACD,CAAwCL,G,UCxGlCsB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACM,OADNA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACF9C,MAAQ,CACJN,KAAO,CACH+B,OAAQ,CAAC,SAAU,OAAQ,WAC3BC,SAAU,CACN,CACIC,MAAO,aACPjC,KAAM,CAAC,EAAG,EAAG,IACbkC,gBAAiB,CACb,0BACA,0BACA,0BACA,wBAEJmB,YAAa,CACT,wBACA,wBACA,wBACA,mBAEJC,YAAa,MAnBrB,EA6EP,OA7EO,yCAwBR,WAAqB,IAAD,OACOpC,KAAKnB,MAArBoC,aACUC,aACbmB,EAAAA,EAAAA,MACKjB,MAAK,SAACC,GACH,EAAKI,SAAS,CACV3C,KAAO,CACH+B,OAAQV,OAAOmC,KAAKjB,GACpBP,SAAU,CACN,CACIC,MAAO,aACPjC,KAAMqB,OAAOC,OAAOiB,GACpBL,gBAAiB,CACb,0BACA,0BACA,0BACA,wBAEJmB,YAAa,CACT,wBACA,wBACA,wBACA,mBAEJC,YAAa,MAKhC,GAEZ,uBAED,WAEI,OADuBpC,KAAKnB,MAArBoC,aACUC,YAET,iBAAKhB,UAAU,OAAf,WACI,gBAAKA,UAAW,gBAAhB,4CAGA,gBAAKA,UAAW,YAAhB,UACI,SAACtB,EAAA,EAAD,CACIE,KAAMkB,KAAKZ,MAAMN,aAO7B,SAAC,EAAAmB,SAAD,GAGX,OA9ECiC,CAAiC5B,EAAAA,WAqFvC,OAAeC,EAAAA,EAAAA,UALf,YACI,MAAO,CACHU,aAFgC,EAAdA,aAIzB,GACD,CAAwCiB,GC/ElCK,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAqBD,OArBCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACF,WACI,OACI,UAAC,EAAAtC,SAAD,YACI,SAACuC,EAAA,GAAD,KACA,SAACC,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACI,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACrE,IAAE,EAACD,IAAE,EAACE,GAAI,EAArB,UACI,SAAC,EAAD,OAEJ,SAACiE,EAAA,GAAD,CAAMG,MAAI,EAACrE,IAAE,EAACD,IAAE,EAACE,GAAI,IAArB,UACI,SAAC,EAAD,OAEJ,SAACiE,EAAA,GAAD,CAAMG,MAAI,EAACrE,IAAE,EAACD,IAAE,EAACE,GAAI,GAArB,UACI,SAAC,EAAD,aAMvB,OArBC4D,CAAmBjC,EAAAA,WAwBzB,G","sources":["component/Navbar.js","pages/Dashboard/components/ChartCurrentComponent.js","pages/Record/container/RecordListContainer.js","pages/Record/container/StatisticalReportContainer.js","pages/Record/container/SectionNumChartContainer.js","pages/Record/index.js"],"sourcesContent":["import * as React from 'react';\nimport {styled, alpha, createTheme} from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport Badge from '@mui/material/Badge';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MailIcon from '@mui/icons-material/Mail';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport Avatar from '@mui/material/Avatar';\nimport MoreIcon from '@mui/icons-material/MoreVert';\nimport { ThemeProvider  } from '@mui/material/styles';\n\n\nconst theme = createTheme({\n    palette: {\n        appBar:{\n            main:'#0474BA',\n            contrastText: '#fff',\n        }\n\n    },\n});\n\nexport default function EmptyAppBar() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const logoutUser = ()=>{\n        localStorage.removeItem(\"token\")\n    }\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={logoutUser}>logout</MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    size=\"large\"\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <ThemeProvider theme={theme}>\n                <AppBar position=\"static\" color=\"appBar\">\n                    <Toolbar>\n                        <IconButton\n                            size=\"large\"\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            sx={{ mr: 2 }}\n                        >\n\n                        </IconButton>\n                        <Typography\n                            variant=\"h6\"\n                            noWrap\n                            component=\"div\"\n                            sx={{ display: { xs: 'none', sm: 'block' } }}\n                        >\n                            ◉ AFR\n                        </Typography>\n                        <Box sx={{ flexGrow: 1 }} />\n                        <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                            <IconButton\n                                size=\"large\"\n                                edge=\"end\"\n                                aria-label=\"account of current user\"\n                                aria-controls={menuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleProfileMenuOpen}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle />\n                            </IconButton>\n                        </Box>\n                        <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                            <IconButton\n                                size=\"large\"\n                                aria-label=\"show more\"\n                                aria-controls={mobileMenuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleMobileMenuOpen}\n                                color=\"inherit\"\n                            >\n                                <MoreIcon/>\n                            </IconButton>\n                        </Box>\n                    </Toolbar>\n                </AppBar>\n            </ThemeProvider>\n            {renderMobileMenu}\n            {renderMenu}\n        </Box>\n    );\n}\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default function ChartCurrentComponent(props){\n    return(\n        <Doughnut data={props.data}/>\n    )\n}","import React, {Component, Fragment} from 'react'\nimport {connect} from \"react-redux\";\nimport DataTable from 'react-data-table-component';\n\nclass RecordListContainer extends Component{\n    state = {\n        columns: [\n            {\n                name: \"Name\",\n                selector: row => row.studentName,\n                sortable: true\n            },\n            {\n                name: \"Date\",\n                selector: row => row.recordedDate,\n                sortable: true\n            },\n            {\n                name: \"Course\",\n                selector: row => row.displayCourse,\n                sortable: true\n            },\n            {\n                name: \"Section\",\n                selector: row => row.displaySection,\n                sortable: true\n            },\n            {\n                name: \"Status\",\n                selector: row => row.status,\n                sortable: true\n            }\n        ],\n    }\n    render() {\n        const {report} = this.props\n        return(\n            <Fragment>\n                <h2>Report</h2>\n                <div className={\"card\"}>\n                    <div className={\"card-body\"}>\n                        <DataTable\n                            columns={this.state.columns}\n                            data={Object.values(report)}\n                            pagination\n                        />\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps({report}){\n    return{\n        report\n    }\n}\n\nexport default connect(mapStateToProps)(RecordListContainer)","import React, {Component, Fragment} from 'react'\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport {getAttendanceSummary} from \"../../../utils/api/api\";\nimport {connect} from \"react-redux\";\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nclass StatisticalReportContainer extends Component{\n    state = {\n        data:{\n            labels:[],\n            datasets: [\n                {\n                    label: 'Dataset 1',\n                    data: [],\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                },\n                {\n                    label: 'Dataset 2',\n                    data: [],\n                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\n                },\n            ],\n        }\n    }\n    componentDidMount() {\n        const {isInstructor} = this.props\n        if (isInstructor.instructor) {\n            getAttendanceSummary()\n                .then((result) => {\n                    console.log(Object.values(result.present))\n                    const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                        \"October\", \"November\", 'December'];\n                    this.setState({\n                        data: {\n                            labels: labels,\n                            datasets: [\n                                {\n                                    label: 'Present',\n                                    data: Object.values(result.present),\n                                    backgroundColor: 'rgba(255, 99, 132, 0.5)',\n                                },\n                                {\n                                    label: 'Late',\n                                    data: Object.values(result.late),\n                                    backgroundColor: 'rgba(252,176,0,0.95)',\n                                },\n                                {\n                                    label: 'Absent',\n                                    data: Object.values(result.absent),\n                                    backgroundColor: 'rgba(53, 162, 235, 0.5)',\n                                },\n                            ],\n                        }\n                    })\n                })\n        }\n    }\n\n    render() {\n        const {isInstructor} = this.props\n        const options = {\n            responsive: true,\n            plugins: {\n                legend: {\n                    position: 'top',\n                },\n                title: {\n                    display: true,\n                    text: 'Attendance Summary',\n                },\n            },\n        };\n        if (isInstructor.instructor) {\n            return (\n                <div className={\"card\"}>\n                    <div className={\"card-body\"}>\n                        <Bar options={options} data={this.state.data}/>\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <Fragment></Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps({isInstructor}){\n    return {\n        isInstructor,\n    }\n}\nexport default connect(mapStateToProps)(StatisticalReportContainer)","import React, {Component, Fragment} from 'react'\nimport ChartCurrentComponent from \"../../Dashboard/components/ChartCurrentComponent\";\nimport {getSectionNumSummary} from \"../../../utils/api/api\";\nimport {connect} from \"react-redux\";\n\nclass SectionNumChartContainer extends Component{\n    state = {\n        data : {\n            labels: ['Absent', 'Late', 'Present'],\n            datasets: [\n                {\n                    label: '# of Votes',\n                    data: [2, 3, 15],\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(192,75,128,0.5)',\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgb(192,75,128)',\n                    ],\n                    borderWidth: 1,\n                },\n            ],\n        }\n    }\n    componentDidMount() {\n        const {isInstructor} = this.props\n        if (isInstructor.instructor){\n            getSectionNumSummary()\n                .then((result)=>{\n                    this.setState({\n                        data : {\n                            labels: Object.keys(result),\n                            datasets: [\n                                {\n                                    label: '# of Votes',\n                                    data: Object.values(result),\n                                    backgroundColor: [\n                                        'rgba(255, 99, 132, 0.2)',\n                                        'rgba(255, 206, 86, 0.2)',\n                                        'rgba(75, 192, 192, 0.2)',\n                                        'rgba(192,75,128,0.5)',\n                                    ],\n                                    borderColor: [\n                                        'rgba(255, 99, 132, 1)',\n                                        'rgba(255, 206, 86, 1)',\n                                        'rgba(75, 192, 192, 1)',\n                                        'rgb(192,75,128)',\n                                    ],\n                                    borderWidth: 1,\n                                },\n                            ],\n                        }\n                    })\n                })\n        }\n    }\n\n    render() {\n        const {isInstructor} = this.props\n        if (isInstructor.instructor){\n            return(\n                <div className=\"card\">\n                    <div className={\"card-body App\"}>\n                        Number of Students in section\n                    </div>\n                    <div className={\"card-body\"}>\n                        <ChartCurrentComponent\n                            data={this.state.data}\n                        />\n                    </div>\n                </div>\n            )\n        }\n            return (\n                <Fragment></Fragment>\n            )\n\n    }\n}\nfunction mapStateToProps({isInstructor}){\n    return {\n        isInstructor,\n    }\n}\nexport default connect(mapStateToProps)(SectionNumChartContainer)\n","import React, {Component, Fragment} from 'react'\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Navbar from \"../../component/Navbar\"\nimport {Button} from \"@mui/material\";\nimport Stack from '@mui/material/Stack';\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport RecordListContainer from \"./container/RecordListContainer\";\nimport StatisticalReportContainer from \"./container/StatisticalReportContainer\";\nimport SectionNumChartContainer from \"./container/SectionNumChartContainer\";\n\nclass RecordPage extends Component{\n    render() {\n        return(\n            <Fragment>\n                <CssBaseline />\n                <Navbar/>\n                <Container fixed>\n                    <Grid container spacing={3}>\n                        <Grid item sm xs md={8}>\n                            <StatisticalReportContainer/>\n                        </Grid>\n                        <Grid item sm xs md={3.8}>\n                            <SectionNumChartContainer/>\n                        </Grid>\n                        <Grid item sm xs md={12}>\n                            <RecordListContainer/>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Fragment>\n        )\n    }\n}\n\nexport default RecordPage"],"names":["theme","createTheme","palette","appBar","main","contrastText","EmptyAppBar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","onClick","localStorage","removeItem","mobileMenuId","renderMobileMenu","size","color","sx","flexGrow","position","edge","mr","variant","noWrap","component","display","xs","sm","md","ChartCurrentComponent","props","data","ChartJS","ArcElement","Tooltip","Legend","RecordListContainer","state","columns","name","selector","row","studentName","sortable","recordedDate","displayCourse","displaySection","status","report","this","Fragment","className","Object","values","pagination","Component","connect","CategoryScale","LinearScale","BarElement","Title","StatisticalReportContainer","labels","datasets","label","backgroundColor","isInstructor","instructor","getAttendanceSummary","then","result","console","log","present","setState","late","absent","options","responsive","plugins","legend","title","text","SectionNumChartContainer","borderColor","borderWidth","getSectionNumSummary","keys","RecordPage","CssBaseline","Navbar","Container","fixed","Grid","container","spacing","item"],"sourceRoot":""}